@using DMFProjectFinal.Controllers;
@using DMFProjectFinal.Models;
@model DMFProjectFinal.Models.DTO.DTO_UtilizationMaster
@{
    ViewBag.Title = "Create Utilization";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}


<div class="card-header">
    @if (String.IsNullOrEmpty(Model.UtilizationID))
    {
        <h4 class="card-title">Upload Utilization Certificate</h4>
    }
    else
    {
        <h4 class="card-title">Update Utilization Certificate</h4>
    }
</div>
<div id="divform">
    <div class="card-body">
        @using (Html.BeginForm("", "", new { }, FormMethod.Post, new { @role = "form", @id = "frmCurrent", enctype = "multipart/form-data" }))
        {
        <div class="row">
            <div class="col-md-6">
                <table class="table table-bordered">
                    <tr>
                        <th colspan="8" style="text-align:center">MileStone Details</th>
                    </tr>
                    <tr>
                        <th>MileStone Installment</th>
                        <td id="ins"></td>
                        <th>MileStone Value</th>
                        <td id="MilestoneText"></td>
                        <th>Mile Stone (%)</th>
                        <td id="Mpercent"></td>
                        <th>Milestone Amount</th>
                        <td id="MileStoneAmount"></td>
                    </tr>

                </table>
            </div>
        </div>
            <div class="row">
                @Html.HiddenFor(x => x.ProjectPreparationID, new { @id = "ProjectPreparationID" })
                @Html.HiddenFor(x => x.UtilizationID)
                @Html.HiddenFor(x => x.DistrictID)

                <div class="col-md-4">
                    <div class="form-label">
                        <strong>Select Project<sup><code>*</code></sup></strong>
                        @Html.HiddenFor(x => x.ProjectNo, new { @id="ProjectNo"})
                        @Html.DropDownListFor(x => x.ProjectNo, ViewBag.ProjectID as SelectList, "-Select Project-", new { @class = "form-control form-control-sm", @autocomplete = "off", onchange = "GetMilestone()", @disabled = "disabled" })
                    </div>

                </div>

                <div class="col-md-4">
                    <div class="form-label">
                        <strong>Utilization Date<sup><code>*</code></sup></strong>
                        @Html.TextBoxFor(x => x.UtilizationDate, new { @class = "form-control form-control-sm ui-date", @autocomplete = "off" })
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-label">
                        <strong>UC(%) Against Release Amount<sup><code>*</code></sup></strong>
                        @Html.TextBoxFor(x => x.UC_Against_ReleaseAmount, new { @class = "form-control form-control-sm", @autocomplete = "off" })
                    </div>
                </div>


            </div>

            <div class="row">
                <div class="col-md-4">
                    <div class="form-label">
                        <strong>Utilization No<sup><code>*</code></sup></strong>
                        @Html.TextBoxFor(x => x.UtilizationNo, new { @class = "form-control form-control-sm", @autocomplete = "off" })
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-label">
                        <strong>
                            Attached Copy<sup><code>*</code></sup>
                            @if (!String.IsNullOrEmpty(Model.UtilizationCopy))
                            {
                                <a href="@Model.UtilizationCopy" target="_blank">View Doc</a>
                                <input type="hidden" value="prev" id="UtilizationCopy" name="UtilizationCopyUtilizationCopy" />
                            }
                        </strong>

                        @Html.TextBoxFor(x => x.UtilizationCopy, new { @class = "form-control form-control-sm file-upload", @autocomplete = "off", @type = "file", @refid = "UtilizationCopy" })
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-label">
                        <strong>Remarks<sup><code>*</code></sup></strong>
                        @Html.TextBoxFor(x => x.Remarks, new { @class = "form-control form-control-sm", @autocomplete = "off" })
                    </div>
                </div>
            </div><div class="row">
                <div class="col-md-1">
                    <div class="form-label">
                        <strong>&nbsp;</strong>
                        @if (String.IsNullOrEmpty(Model.UtilizationID))
                        {

                            <input type="button" value="Save" class="btn btn-primary" onclick="SaveUtilization()" id="btnsave" />
                        }
                        else
                        {
                            <input type="button" value="Update" class="btn btn-primary" onclick="UpdateUtilization()" id="btnupdate" />

                        }
                        @*<input type="submit" id="btnSubmit" value="@(String.IsNullOrEmpty(Model.UtilizationID)?"Save":"Update")" class="btn btn-primary" />*@
                    </div>
                </div>
                <div class="col-md-1">
                    <div class="form-label">
                        <strong>&nbsp;</strong>
                        @if (String.IsNullOrEmpty(Model.UtilizationID))
                        {
                            <input type="reset" id="btnReset" class="btn btn-danger" value="Reset" />
                        }
                        else
                        {
                            <a href="/Utilization/UtilizationList" class="btn btn-danger">Back</a>
                            //href = "/UserManagement/UserRegistration"

                        }
                    </div>
                </div>
            </div>
        }
    </div>
</div>
<div class="row" style="display:none" id="MileStoneTable">
    <div class="col-md-12">
        <h6 style="text-align:center">Project Milestone</h6>
        <table class="table table-bordered table-striped">
            <tr>
                <th>District Name</th>
                <th>Project Name</th>
                <th>Approved Amt</th>
                <th>MileStone Values</th>
                <th>Milestone (%)</th>
                <th>Milestone AMT</th>
                <th>Installment</th>
                <th>Fund Released</th>
                <th>Physical Progress</th>
                <th>Utilization Uploaded</th>
                <th>Inspection Done</th>

            </tr>
            <tbody id="MIlestone">
            </tbody>
        </table>
    </div>
</div>
@section scripts{
    <script>


        function SaveUtilization() {
            var frmdata = new FormData($('#frmCurrent')[0]);
            var ProjectNo = $("#ProjectNo").val();
            var UtilizationDate = $("#UtilizationDate").val();
            var UC_Against_ReleaseAmount = $("#UC_Against_ReleaseAmount").val();
            var UtilizationNo = $("#UtilizationNo").val();
            var UtilizationCopy = $("#UtilizationCopy").val();
            var Remarks = $("#Remarks").val();
            if (ProjectNo == "") {
                swal("Warning", "Please Select Project Name", "warning");

                return;
            }
            if (UtilizationDate == "") {
                swal("Warning", "Please Fill Utilization Date", "warning");
                return;
            }
            if (UC_Against_ReleaseAmount == "") {
                swal("Warning", "Please Fill UC Against ReleaseAmount", "warning");
                return;
            }
            if (UtilizationNo == "") {
                swal("Warning", "Please Fill Utilization No", "warning");
                return;
            }
            if (UtilizationCopy == "") {
                swal("Warning", "Please Select Utilization Copy", "warning");
                return;
            }
            if (Remarks == "") {
                swal("Warning", "Please Enter Remarks", "warning");
                return;

            }
            $.ajax({
                url: "/Utilization/CreateUtilization",
                type: "POST",
                dataType: "json",
                contentType: false,
                processData: false,
                data: frmdata,
                success: function (data) {
                    if (data == "1") {
                        swal({
                            title: 'Good Job !',
                            text: 'Record Save Successfully !!',
                            icon: 'success',
                            confirmButtonText: 'OK'
                        }).then(function () {
                            window.location.href = "/Utilization/UtilizationList";
                        });
                        //toastr.success("utilization uploaded succesfully", "Success", { onHidden: function () { window.location.href = "/Utilization/UtilizationList" } });
                        //alert("utilization uploaded succesfully !!");
                    }
                    else if (data == "0") {

                        //toastr.error("Something went wrong please try later  !!", "Error");
                        swal("Error","Something went wrong please try later  !!", "error");

                        //alert("Something went wrong please try later  !!");

                    }
                    else {
                        swal("Error", "Something went wrong please try later  !!", "error");


                    }
                },
                error: function (data) {
                    swal("Error", "Something went wrong please try later  !!", "error");


                }
            })
        }
    </script>
    <script>
        function UpdateUtilization() {
            var frmdata = new FormData($('#frmCurrent')[0]);
            var ProjectNo = $("#ProjectNo").val();
            var UtilizationDate = $("#UtilizationDate").val();
            var UC_Against_ReleaseAmount = $("#UC_Against_ReleaseAmount").val();
            var UtilizationNo = $("#UtilizationNo").val();
            var UtilizationCopy = $("#UtilizationCopy").val();
            var Remarks = $("#Remarks").val();
            if (ProjectNo == "") {
                swal("Warning", "Please Select Project Name", "warning");

                return;
            }
            if (UtilizationDate == "") {
                swal("Warning", "Please Fill Utilization Date", "warning");
                return;
            }
            if (UC_Against_ReleaseAmount == "") {
                swal("Warning", "Please Fill UC Against ReleaseAmount", "warning");
                return;
            }
            if (UtilizationNo == "") {
                swal("Warning", "Please Fill Utilization No", "warning");
                return;
            }
            //if (UtilizationCopy == "") {
            //    swal("Warning", "Please Select Utilization Copy", "warning");
            //    return;
            //}
            if (Remarks == "") {
                swal("Warning", "Please Enter Remarks", "warning");
                return;

            }
            $.ajax({
                url: "/Utilization/UpdateUtilization",
                type: "POST",
                dataType: "json",
                contentType: false,
                processData: false,
                data: frmdata,
                success: function (data) {
                    if (data == "1") {
                        swal({
                            title: 'Good Job !',
                            text: 'Record Updated Successfully !!',
                            icon: 'success',
                            confirmButtonText: 'OK'
                        }).then(function () {
                            window.location.href = "/Utilization/UtilizationList";
                        });
                        //toastr.success("utilization Updated succesfully", "Success", { onHidden: function () { window.location.href = "/Utilization/UtilizationList" } });
                        //alert("utilization uploaded succesfully !!");
                    }
                    else if (data == "0") {
                        swal("Error", "Something went wrong please try later  !!", "error");
                        //toastr.error("Something went wrong please try later  !!", "Error");

                        //alert("Something went wrong please try later  !!");

                    }
                    else {
                        swal("Error", "Something went wrong please try later  !!", "error");
                        //toastr.error(data, "Error");

                    }
                },
                error: function (data) {
                    swal("Error", "Something went wrong please try later  !!", "error");
                    //alert("Something went wrong please try later  !!");

                }
            })
        }
    </script>
    <script>
        function GetMilestone() {
            var DistrictID = $("#DistrictID").val();
            var ProjectPreparationID = $("#ProjectPreparationID").val();
            GetmilestoneDetailsforInstallment(ProjectPreparationID)
            if (ProjectNo != "") {
                $("#MileStoneTable").show();

            }
            else {
                $("#MileStoneTable").hide();

            }
            $.ajax({
                url: "/Utilization/MileStoneByProject",
                type: "POST",
                contentType: "application/json;charset=utf-8;",
                dataType: "json",
                data: JSON.stringify({ DistrictID: DistrictID, ProjectPreparationID: ProjectPreparationID }),
                success: function (data) {
                    var html = "";
                    // Output district name, project name, and project cost only once
                    html += "<tr>";
                    html += "<td rowspan='" + (data.length * 4) + "'>" + data[0].Districtname + "</td>";
                    html += "<td rowspan='" + (data.length * 4) + "'>" + data[0].ProjectName + "</td>";
                    html += "<td rowspan='" + (data.length * 4) + "'>" + data[0].SanctionedProjectCost + "</td>";
                    html += "</tr>";
                    // Output milestone details for each milestone
                    for (var i = 0; i < data.length; i++) {
                        html += "<tr>";
                        //html += "<td>" + data[i].Districtname + "</td>";
                        //html += "<td>" + data[i].ProjectName + "</td>";
                        //html += "<td>" + data[i].SanctionedProjectCost + "</td>";
                        html += "<td>" + data[i].Instext + "</td>";
                        html += "<td>" + data[i].InsPercentage + "</td>";
                        var releaseamt = (parseFloat(data[0].SanctionedProjectCost) * parseFloat(data[i].InsPercentage) / 100)
                        html += "<td>" + releaseamt + "</td>";
                        html += "<td>" + data[i].InstallmentName + "</td>";
                        if (data[i].IsFundReleased == true) {

                            html += "<td>YES</td>";
                        }
                        else {
                            html += "<td>NO</td>";

                        }
                        if (data[i].IsPhProgressDone == true) {

                            html += "<td>YES</td>";
                        }
                        else {
                            html += "<td>NO</td>";

                        }
                        if (data[i].IsUtilizationUploaded == true) {

                            html += "<td>YES</td>";
                        }
                        else {
                            html += "<td>NO</td>";

                        }
                        if (data[i].IsInspectionDone == true) {

                            html += "<td>YES</td>";
                        }
                        else {
                            html += "<td>NO</td>";

                        }
                        html += "</tr>";
                    }
                    $("#MIlestone").html(html);
                    //console.log(data);
                }
            })
        }

    </script>
    <script>
    //for above data on the utilization  form
        function GetmilestoneDetailsforInstallment(ProjectPreparationID) {
            debugger
            $.ajax({
                url: "/Utilization/GetMilestoneByInstallment",
                type: "POST",
                contentType: "application/json;charset=utf-8;",
                dataType: "json",
                data: JSON.stringify({ ProjectPreparationID: ProjectPreparationID }),
                success: function (data) {
                    if (data.InstallmentName != null) {
                        $("#ins").html(data.InstallmentName);
                        $("#MilestoneText").html(data.Instext);
                        $("#Mpercent").text(data.InsPercentage);
                        $("#MileStoneAmount").html(parseFloat(data.SanctionedProjectCost) * parseFloat(data.InsPercentage) / 100);
                    }
                }
            })
        }
    </script>
    <script>
        $(document).ready(function () {
            var id = $("#ProjectPreparationID").val();
            if (id != "") {
                GetMilestone();
               
            }

        });
    </script>
}
