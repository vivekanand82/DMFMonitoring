@using DMFProjectFinal.Controllers
@using DMFProjectFinal.Models
@model DMFProjectFinal.Models.DTO.DTO_PhysicalProgressMaster
@{
    ViewBag.Title = "Create Physical Progress";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="card-header">
    @if (String.IsNullOrEmpty(Model.PhysicalprogressID))
    {
        <h4 class="card-title">Create Physical Progress</h4>
    }
    else
    {
        <h4 class="card-title">Update Physical Progress</h4>
    }
</div>


<div id="divform">
    <div class="card-body">
        @using (Html.BeginForm((String.IsNullOrEmpty(Model.PhysicalprogressID) ? "CreatePhysicalProgress" : "EditPhysicalProgress"), "PhysicalProgress", new { }, FormMethod.Post, new { @role = "form", @id = "frmCurrent", enctype = "multipart/form-data" }))
        {
            <div class="row">
                @Html.HiddenFor(x => x.PhysicalprogressID,new { @id= "PhysicalprogressID" })
                @Html.HiddenFor(x => x.DistrictID)
                @*@Html.HiddenFor(x => x.MileStoneID,new { @id= "MileStoneID" })*@

                <div class="col-md-4">
                    <div class="form-label">
                        <strong>Select Project<sup><code>*</code></sup></strong>
                        @Html.DropDownListFor(x => x.ProjectNo, ViewBag.ProjectID as SelectList, "-Select Project-", new { @class = "form-control form-control-sm", @autocomplete = "off", @onchange = "GetMilestone()" })
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="form-label">
                        <strong>Ph. Progress Date<sup><code>*</code></sup></strong>
                        @Html.TextBoxFor(x => x.PhysicalProgressDate, new { @class = "form-control form-control-sm ui-date", @autocomplete = "off" })
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-label">
                        <strong>Physical Progress(%)<sup><code>*</code></sup></strong>
                        @Html.TextBoxFor(x => x.PhysicalPInPer, new { @class = "form-control form-control-sm", @autocomplete = "off" })
                    </div>
                </div>
                <div class="row" style="display:none" id="MileStoneTable">
                    <div class="col-md-12">
                        <table class="table table-bordered table-striped">
                            <tr>
                                <th>District Name</th>
                                <th>Project Name</th>
                                <th>Approved Amt</th>
                                <th>MileStone Values</th>
                                <th>Milestone (%)</th>
                                <th>Milestone AMT</th>
                                <th>Installment</th>
                                <th>Fund Released</th>
                                <th>Physical Progress</th>
                                <th>Utilization Uploaded</th>
                                <th>Inspection Done</th>

                            </tr>
                            <tbody id="MIlestone">
                            </tbody>
                        </table>
                    </div>
                </div>
            </div><div class="row">

                <div class="col-md-4">
                    <div class="form-label">
                        <strong>
                            Attached Copy<sup><code>*</code></sup>
                            @if (!String.IsNullOrEmpty(Model.PhysicalProgressCopy))
                            {
                                <a href="@Model.PhysicalProgressCopy" target="_blank">View Doc</a>
                                <input type="hidden" value="prev" id="PhysicalProgressCopy" name="PhysicalProgressCopy" />
                            }
                        </strong>

                        @Html.TextBoxFor(x => x.PhysicalProgressCopy, new { @class = "form-control form-control-sm file-upload", @autocomplete = "off", @type = "file", @refid = "PhysicalProgressCopy" })
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-label">
                        <strong>Spend Amount<sup><code>*</code></sup></strong>
                        @Html.TextBoxFor(x => x.AmountSpend, new { @class = "form-control form-control-sm", @autocomplete = "off" })
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-label">
                        <strong>Remark<sup><code>*</code></sup></strong>
                        @Html.TextBoxFor(x => x.Remark, new { @class = "form-control form-control-sm", @autocomplete = "off" })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-1">
                    <div class="form-label">
                        <strong>&nbsp;</strong>
                        <input type="submit" id="btnSubmit" value="@(String.IsNullOrEmpty(Model.PhysicalprogressID)?"Save":"Update")" class="btn btn-primary" />
                    </div>
                </div>
                <div class="col-md-1">
                    <div class="form-label">
                        <strong>&nbsp;</strong>
                        @if (String.IsNullOrEmpty(Model.PhysicalprogressID))
                        {
                            <input type="reset" id="btnReset" class="btn btn-danger" value="Reset" />
                        }
                        else
                        {
                            <a href="/PhysicalProgress/PhysicalProgressList" class="btn btn-danger">Back</a>
                            //href = "/UserManagement/UserRegistration"

                        }
                    </div>
                </div>
            </div>

        }
    </div>
</div>

<script>
    function GetMilestone() {
        var DistrictID = $("#DistrictID").val();
        var ProjectNo = $("#ProjectNo").val();
        if (ProjectNo != "") {
            $("#MileStoneTable").show();

        }
        else {
            $("#MileStoneTable").hide();

        }
        $.ajax({
            url: "/PhysicalProgress/MileStoneByProject",
            type: "POST",
            contentType: "application/json;charset=utf-8;",
            dataType: "json",
            data: JSON.stringify({ DistrictID: DistrictID, ProjectNo: ProjectNo }),
            success: function (data) {
                var html = "";
                // Output district name, project name, and project cost only once
                //html += "<tr>";
                //html += "<td rowspan='" + (data.length * 4) + "'>" + data[0].Districtname + "</td>";
                //html += "<td rowspan='" + (data.length * 4) + "'>" + data[0].ProjectName + "</td>";
                //html += "<td rowspan='" + (data.length * 4) + "'>" + data[0].SanctionedProjectCost + "</td>";
                //html += "</tr>";
                // Output milestone details for each milestone
                for (var i = 0; i < data.length; i++) {
                    html += "<tr>";
                    html += "<td>" + data[i].Districtname + "</td>";
                    html += "<td>" + data[i].ProjectName + "</td>";
                    html += "<td>" + data[i].SanctionedProjectCost + "</td>";
                    html += "<td>" + data[i].Instext + "</td>";
                    html += "<td>" + data[i].InsPercentage + "</td>";
                    var releaseamt = (parseFloat(data[0].SanctionedProjectCost) * parseFloat(data[i].InsPercentage) / 100)
                    html += "<td>" + releaseamt + "</td>";
                    html += "<td>" + data[i].InstallmentName + "</td>";
                    if (data[i].IsFundReleased == true) {

                        html += "<td>YES</td>";
                    }
                    else {
                        html += "<td>NO</td>";

                    }
                    if (data[i].IsPhProgressDone == true) {

                        html += "<td>YES</td>";
                    }
                    else {
                        html += "<td>NO</td>";

                    }
                    if (data[i].IsUtilizationUploaded == true) {

                        html += "<td>YES</td>";
                    }
                    else {
                        html += "<td>NO</td>";

                    }
                    if (data[i].IsInspectionDone == true) {

                        html += "<td>YES</td>";
                    }
                    else {
                        html += "<td>NO</td>";

                    }
                    html += "</tr>";
                }
                $("#MIlestone").html(html);
                console.log(data);
            }
        })
    }

</script>
@*<script>
    function GetMilestoneDetails() {
        $("#DetailsRow").show();
        var DistrictID = $("#DistrictID").val();
        var ProjectNo = $("#ProjectNo").val();
        if (ProjectNo == "") {
            $("#DetailsRow").hide();
            return;
        }
        debugger
        $.ajax({
            url: "/PhysicalProgress/BindMileStoneData",
            type: "POST",
            contentType: "Application/json;charset=utf-8;",
            dataType: "json",
            data: JSON.stringify({ DistrictID: DistrictID, ProjectNo: ProjectNo }),
            success: function (data) {
                //alert("done");
                var html = "";
                if (data.length > 0) {
                    for (var i = 0; i < data.length; i++) {
                        html += "<tr>";
                        var CreatedDateFormat = new Date(parseInt(data[i].CreatedDate.substr(6)));
                        html += "<td>" + data[i].ProjectName + "</td>";
                        html += "<td>" + data[i].SanctionedProjectCost + "</td>";
                        html += "<td style='color:green;font-weight:bold;'>" + parseFloat(data[i].SanctionedProjectCost) * parseFloat(data[i].MileStonePercentage) / 100 + "</td>";
                        html += "<td>" + data[i].MileStonePercentage + "</td>";
                        //html += "<td>" + data[i].SectorName + "</td>";
                        html += "<td>" + CreatedDateFormat.toLocaleDateString("es-CL") + "</td>";
                        //html += "<td style='color:green;font-weight:bold'>Rs." + data[i].ReleaseAmount + "</td>";
                        //var balance = data[i].SanctionedProjectCost - data[i].ReleaseAmount;
                        //for (var j = 0; j < i; j++) {
                        //    balance -= data[j].ReleaseAmount;
                        //}

                        //html += "<td>" + balance + "</td>";
                        html += "<td>" + data[i].InstallmentName + "</td>";
                        html += "<td>" + data[i].Remark + "</td>";
                        html += "<tr>";
                        html += "</tr>";
                    }
                    $("#MilestoneData").html(html);
                }
                else {
                    html += "<tr>";
                    html += "<td colspan='6' style='text-align:center;font-size:15px'>No fund released for this project</td>";
                    html += "</tr>";
                    $("#MilestoneData").html(html);
                }

            }
        })
    }

</script>*@
@section scripts{
    <script>
        $(document).ready(function () {
            var id = $("#PhysicalprogressID").val();
            if (id != "" ) {
                GetMilestoneDetails()
            }
        });
    </script>
}

