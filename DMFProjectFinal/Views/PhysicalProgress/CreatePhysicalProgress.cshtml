@using DMFProjectFinal.Controllers
@using DMFProjectFinal.Models
@model DMFProjectFinal.Models.DTO.DTO_PhysicalProgressMaster
@{
    ViewBag.Title = "Create Physical Progress";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="card-header">
    @if (String.IsNullOrEmpty(Model.PhysicalprogressID))
    {
        <h4 class="card-title">Create Physical Progress</h4>
    }
    else
    {
        <h4 class="card-title">Update Physical Progress</h4>
    }
</div>


<div id="divform">
    <div class="card-body">
        @using (Html.BeginForm((String.IsNullOrEmpty(Model.PhysicalprogressID) ? "CreatePhysicalProgress" : "EditPhysicalProgress"), "PhysicalProgress", new { }, FormMethod.Post, new { @role = "form", @id = "frmCurrent", enctype = "multipart/form-data" }))
        {
        <div class="row">
            <div class="col-md-4">
                <p>Physical progress (%)</p>
                <div class="progress">
                    <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" style="width: 0%;" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">0%</div>
                </div>
            </div>
          
                <div class="col-md-6">
                    <table class="table table-bordered">
                        <tr>
                            <th colspan="8" style="text-align:center">MileStone Details</th>
                        </tr>
                        <tr>
                            <th>MileStone Installment</th>
                            <td id="ins"></td>
                            <th>MileStone Value</th>
                            <td id="MilestoneText"></td>
                            <th>Mile Stone (%)</th>
                            <td id="Mpercent"></td>
                            <th>Milestone Amount</th>
                            <td id="MileStoneAmount"></td>
                        </tr>

                    </table>
                </div>
          
        </div>
            <div class="row">
                @Html.HiddenFor(x => x.ProjectPreparationID, new { @id = "ProjectPreparationID" })
                @Html.HiddenFor(x => x.PhysicalprogressID, new { @id = "PhysicalprogressID" })
                @Html.HiddenFor(x => x.DistrictID)
                @*@Html.HiddenFor(x => x.MileStoneID,new { @id= "MileStoneID" })*@

                <div class="col-md-3">
                    <div class="form-label">
                        <strong>Select Project<sup><code>*</code></sup></strong>
                        @Html.HiddenFor(x=>x.ProjectNo,new { @id="ProjectNo"})
                        @Html.DropDownListFor(x => x.ProjectNo, ViewBag.ProjectID as SelectList, "-Select Project-", new { @class = "form-control form-control-sm", @autocomplete = "off", @onchange = "GetMilestone()",@disabled="disabled" })
                    </div>
                </div>

                <div class="col-md-3">
                    <div class="form-label">
                        <strong>Ph. Progress Date<sup><code>*</code></sup></strong>
                        @Html.TextBoxFor(x => x.PhysicalProgressDate, new { @class = "form-control form-control-sm ui-date", @autocomplete = "off" })
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-label">
                        <strong>Physical Progress(%)<sup><code>*</code></sup></strong>
                        @Html.TextBoxFor(x => x.PhysicalPInPer, new { @class = "form-control form-control-sm", @autocomplete = "off",@type="number" })
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-label">
                        <strong>
                            Attached Copy<sup><code>*</code></sup>
                            @if (!String.IsNullOrEmpty(Model.PhysicalProgressCopy))
                            {
                                <a href="@Model.PhysicalProgressCopy" target="_blank">View Doc</a>
                                <input type="hidden" value="prev" id="PhysicalProgressCopy" name="PhysicalProgressCopy" />
                            }
                        </strong>

                        @Html.TextBoxFor(x => x.PhysicalProgressCopy, new { @class = "form-control form-control-sm file-upload", @autocomplete = "off", @type = "file", @refid = "PhysicalProgressCopy" })
                    </div>
                </div>
                
            </div>
        <div class="row">


                <div class="col-md-3">
                    <div class="form-label">
                        <strong>Spend Amount<sup><code>*</code></sup></strong>
                        @Html.TextBoxFor(x => x.AmountSpend, new { @class = "form-control form-control-sm", @autocomplete = "off" })
                        <span id="errortext" style="color:red"></span>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-label">
                        @*<strong>Progress Images<sup><code>*</code></sup></strong>*@
                        @*@Html.TextBoxFor(x => x.PhysicalProgressImages, new { @class = "form-control form-control-sm", @autocomplete = "off", @type = "file", @multiple = "multiple" })*@
                        <div class="form-label">
                            <strong>
                                Progress Image<sup><code>*</code></sup>
                                @if (!String.IsNullOrEmpty(Model.PhysicalProgressImages))
                                {
                                    <a href="@Model.PhysicalProgressImages" target="_blank">View Doc</a>
                                    <input type="hidden" value="prev" id="PhysicalProgressImages" name="PhysicalProgressImages" />
                                }
                            </strong>

                            @Html.TextBoxFor(x => x.PhysicalProgressImages, new { @class = "form-control form-control-sm file-upload", @autocomplete = "off", @type = "file", @refid = "PhysicalProgressImages" })
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-label">
                        <strong>Progress Status<sup><code>*</code></sup></strong>
                        @*@Html.TextBoxFor(x => x.PhysicalProgressImages, new { @class = "form-control form-control-sm", @autocomplete = "off", @type = "file", @multiple = "multiple" })*@
                        @Html.DropDownListFor(x => x.ProgressStatus, new List<SelectListItem>
                   {
                       new SelectListItem{ Value="1",Text="InProcess"},
                       new SelectListItem{ Value="2",Text="Completed"},
                       new SelectListItem{ Value="3",Text="Stuck"},
                   }, "-Select-", new { @class = "form-control form-control-sm" })
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-label">
                        <strong>Remark<sup><code>*</code></sup></strong>
                        @Html.TextBoxFor(x => x.Remark, new { @class = "form-control form-control-sm", @autocomplete = "off" })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-1">
                    <div class="form-label">
                        <strong>&nbsp;</strong>
                        <input type="submit" id="btnSubmit" value="@(String.IsNullOrEmpty(Model.PhysicalprogressID)?"Save":"Update")" class="btn btn-primary" />
                    </div>
                </div>
                <div class="col-md-1">
                    <div class="form-label">
                        <strong>&nbsp;</strong>
                        @if (String.IsNullOrEmpty(Model.PhysicalprogressID))
                        {
                            <input type="reset" id="btnReset" class="btn btn-danger" value="Reset" />
                        }
                        else
                        {
                            <a href="/PhysicalProgress/PhysicalProgressList" class="btn btn-danger">Back</a>
                            //href = "/UserManagement/UserRegistration"

                        }
                    </div>
                </div>
            </div>

        }
    </div>
</div>
<div class="row" style="display:none" id="MileStoneTable">
    <div class="col-md-12">
        <h6 style="text-align:center">Project Milestone</h6>
        <table class="table table-bordered table-striped">
            <tr>
                <th>District Name</th>
                <th>Project Name</th>
                <th>Sanctioned Amt</th>
                <th>MileStone Values</th>
                <th>Milestone (%)</th>
                <th>Milestone AMT</th>
                <th>Installment</th>
                <th>Fund Released</th>
                <th>Physical Progress</th>
                <th>Utilization Uploaded</th>
                <th>Inspection Done</th>

            </tr>
            <tbody id="MIlestone">
            </tbody>
        </table>
    </div>
</div>
<script>
    function GetMilestone() {
                var DistrictID = $("#DistrictID").val();
        var ProjectPreparationID = $("#ProjectPreparationID").val();
        getProgressPercentage(ProjectPreparationID);
        GetmilestoneDetailsforInstallment(ProjectPreparationID);
                if (ProjectNo != "") {
            $("#MileStoneTable").show();

                }
                else {
            $("#MileStoneTable").hide();

                }
        $.ajax({
                url: "/PhysicalProgress/MileStoneByProject",
            type: "POST",
            contentType: "application/json;charset=utf-8;",
            dataType: "json",
            data: JSON.stringify({ DistrictID: DistrictID, ProjectPreparationID: ProjectPreparationID }),
            success: function (data) {
                if ($.trim(data) != "") {
                        var html = "";
                        // Output district name, project name, and project cost only once
                        html += "<tr>";
                        html += "<td rowspan='" + (data.length * 4) + "'>" + data[0].Districtname + "</td>";
                        html += "<td rowspan='" + (data.length * 4) + "'>" + data[0].ProjectName + "</td>";
                        html += "<td rowspan='" + (data.length * 4) + "'>" + data[0].SanctionedProjectCost + "</td>";
                        html += "</tr>";
                        // Output milestone details for each milestone
                        for (var i = 0; i < data.length; i++) {
                            html += "<tr>";
                            //html += "<td>" + data[i].Districtname + "</td>";
                            //html += "<td>" + data[i].ProjectName + "</td>";
                            //html += "<td>" + data[i].SanctionedProjectCost + "</td>";
                            html += "<td>" + data[i].Instext + "</td>";
                            html += "<td>" + data[i].InsPercentage + "</td>";
                            var releaseamt = (parseFloat(data[0].SanctionedProjectCost) * parseFloat(data[i].InsPercentage) / 100)
                            html += "<td>" + releaseamt + "</td>";
                            html += "<td>" + data[i].InstallmentName + "</td>";
                            if (data[i].IsFundReleased == true) {

                                html += "<td>YES</td>";
                            }
                            else {
                                html += "<td>NO</td>";

                            }
                            if (data[i].IsPhProgressDone == true) {

                                html += "<td>YES</td>";
                            }
                            else {
                                html += "<td>NO</td>";

                            }
                            if (data[i].IsUtilizationUploaded == true) {

                                html += "<td>YES</td>";
                            }
                            else {
                                html += "<td>NO</td>";

                            }
                            if (data[i].IsInspectionDone == true) {

                                html += "<td>YES</td>";
                            }
                            else {
                                html += "<td>NO</td>";

                            }
                            html += "</tr>";
                        }
                $("#MIlestone").html(html);
                }

                else {
                    $("#MIlestone").html("<tr><td colspan='7' style='text-align:center'>No data found.</td></tr>");
                    //$("#exampleModal").show();
                }
                    }
                })
    }

</script>
@*<script>
    function GetMilestoneDetails() {
        $("#DetailsRow").show();
        var DistrictID = $("#DistrictID").val();
        var ProjectNo = $("#ProjectNo").val();
        if (ProjectNo == "") {
            $("#DetailsRow").hide();
            return;
        }
        debugger
        $.ajax({
            url: "/PhysicalProgress/BindMileStoneData",
            type: "POST",
            contentType: "Application/json;charset=utf-8;",
            dataType: "json",
            data: JSON.stringify({ DistrictID: DistrictID, ProjectNo: ProjectNo }),
            success: function (data) {
                //alert("done");
                var html = "";
                if (data.length > 0) {
                    for (var i = 0; i < data.length; i++) {
                        html += "<tr>";
                        var CreatedDateFormat = new Date(parseInt(data[i].CreatedDate.substr(6)));
                        html += "<td>" + data[i].ProjectName + "</td>";
                        html += "<td>" + data[i].SanctionedProjectCost + "</td>";
                        html += "<td style='color:green;font-weight:bold;'>" + parseFloat(data[i].SanctionedProjectCost) * parseFloat(data[i].MileStonePercentage) / 100 + "</td>";
                        html += "<td>" + data[i].MileStonePercentage + "</td>";
                        //html += "<td>" + data[i].SectorName + "</td>";
                        html += "<td>" + CreatedDateFormat.toLocaleDateString("es-CL") + "</td>";
                        //html += "<td style='color:green;font-weight:bold'>Rs." + data[i].ReleaseAmount + "</td>";
                        //var balance = data[i].SanctionedProjectCost - data[i].ReleaseAmount;
                        //for (var j = 0; j < i; j++) {
                        //    balance -= data[j].ReleaseAmount;
                        //}

                        //html += "<td>" + balance + "</td>";
                        html += "<td>" + data[i].InstallmentName + "</td>";
                        html += "<td>" + data[i].Remark + "</td>";
                        html += "<tr>";
                        html += "</tr>";
                    }
                    $("#MilestoneData").html(html);
                }
                else {
                    html += "<tr>";
                    html += "<td colspan='6' style='text-align:center;font-size:15px'>No fund released for this project</td>";
                    html += "</tr>";
                    $("#MilestoneData").html(html);
                }

            }
        })
    }

</script>*@
<script>//for above data on the phsical progress form
    function GetmilestoneDetailsforInstallment(ProjectPreparationID) {
        $.ajax({
            url: "/PhysicalProgress/GetMilestoneByInstallment",
            type: "POST",
            contentType: "application/json;charset=utf-8;",
            dataType: "json",
            data: JSON.stringify({ ProjectPreparationID: ProjectPreparationID }),
            success: function (data) {
                if (data.InstallmentName != null) {
                    $("#ins").html(data.InstallmentName);
                    $("#MilestoneText").html(data.Instext);
                    $("#Mpercent").text(data.InsPercentage);
                    $("#MileStoneAmount").html(parseFloat(data.SanctionedProjectCost) * parseFloat(data.InsPercentage) / 100);
                }
            }
        })
    }
</script>
@section scripts{
    <script>
        $(document).ready(function () {
            var id = $("#ProjectNo").val();
            if (id != "" ) {
                GetMilestone();
            }
            $("#AmountSpend").keyup(function () {
                debugger
                //var project = $("#ProjectNo").val();
                //var installmnt = $("#InstallmentID").val();
                var AmountSpend = $(this).val();
                var MileStoneAmount = parseFloat($("#MileStoneAmount").text());
                //var RelaeseDate = $("#RelaeseDate").val();
                //var FundReleaseCopy = $("#FundReleaseCopy").val();
                if (AmountSpend > MileStoneAmount) {
                    $("#errortext").text("Are you sure you have spent more than milestone amount !!");
                    //alert("Release Amount Should be equal to Milestone amount !!");
                    $("#AmountSpend").focus();
                    return;
                }
                else {
                    $("#errortext").text("");
                }

            })
        });
    </script>
    <script>
        function getProgressPercentage(ProjectPreparationID) {
            debugger
            $.ajax({
                url: "/PhysicalProgress/GetProgressPercentage",
                type: "POST",
                contentType: "application/json;charset=utf-8;",
                dataType: "json",
                data: JSON.stringify({ ProjectPreparationID: ProjectPreparationID }),
                success: function (data) {
                    if (data.PhysicalPInPer!=null) {
                        $(".progress-bar").text(data.PhysicalPInPer + "%");
                        $(".progress-bar").css("width", data.PhysicalPInPer + "%").removeClass("bg-danger").addClass("bg-success");
                    }
                    else {
                        $(".progress-bar").text("0%");
                        $(".progress-bar").css("width", "5%").addClass("bg-danger");
                    }
                }
            })
        }
    </script>
}

