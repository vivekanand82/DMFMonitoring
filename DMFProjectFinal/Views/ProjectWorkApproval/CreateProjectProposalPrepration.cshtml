@using DMFProjectFinal.Models
@using DMFProjectFinal.Controllers
@model DMFProjectFinal.Models.DTO.DTO_ProjectProposalPrepration
@{
    ViewBag.Title = "Register Lessee";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<link href="https://fonts.googleapis.com/css?family=Raleway" rel="stylesheet">
<style>
    * {
        box-sizing: border-box;
    }

    body {
        background-color: #f1f1f1;
    }

    #frmCurrent {
        background-color: #ffffff;
        /*margin: 100px auto;*/
        font-family: Raleway;
        padding: 40px;
        width: 100%;
        min-width: 300px;
    }

    h1 {
        text-align: center;
    }

    /* .valid {
        padding: 10px;
        width: 100%;
        font-size: 17px;
        font-family: Raleway;
        border: 1px solid #aaaaaa;
    }*/

    /* Mark input boxes that gets an error on validation: */
    /* input.invalid {
        background-color: #ffdddd;
    }
    select.invalid {
        background-color: #ffdddd;
    }*/
    /*  Hide all steps by default: */
    .tab {
        display: none;
    }

    button {
        background-color: #0d6efd;
        color: #ffffff;
        border: none;
        padding: 10px 20px;
        font-size: 17px;
        font-family: Raleway;
        cursor: pointer;
    }

    #btnSubmit {
        background-color: #0d6efd;
        color: #ffffff;
        border: none;
        padding: 10px 20px;
        font-size: 17px;
        font-family: Raleway;
        cursor: pointer;
    }

    button:hover {
        opacity: 0.8;
    }

    #prevBtn {
        background-color: #bbbbbb;
    }

    /* Make circles that indicate the steps of the form: */
    .step {
        height: 15px;
        width: 15px;
        margin: 0 2px;
        background-color: #083853;
        border: none;
        border-radius: 50%;
        display: inline-block;
        opacity: 0.5;
    }

        .step.active {
            opacity: 1;
        }

        /* Mark the steps that are finished and valid: */
        .step.finish {
            background-color: #083853;
        }
</style>
<div class="card-header">
    @if (String.IsNullOrEmpty(Model.ProjectPreparationID))
    {
        <h4 class="card-title">Project Proposal Prepration</h4>
    }
    else
    {
        <h4 class="card-title">Update Project Proposal Prepration</h4>
    }
</div>
<div id="divform">
    <div class="card-body">
        @using (Html.BeginForm((String.IsNullOrEmpty(Model.ProjectPreparationID) ? "CreateProjectProposalPrepration" : "EditProjectProposalPrepration"), "ProjectWorkApproval", new { }, FormMethod.Post, new { @role = "form", @id = "frmCurrent", enctype = "multipart/form-data" }))
        {
            <div class="row tab">
                @Html.HiddenFor(x => x.ProjectPreparationID)
                <div class="row">
                    <input type="hidden" id="ProjectPreparationID" />


                    <div class="col-md-3">
                        <div class="form-label">
                            <strong>Project No<sup><code>*</code></sup></strong>
                            <input type="text" class="form-control" value="@ViewBag.acq" id="ProjectNo" />
                        </div>
                    </div>




                    <div class="col-md-3">
                        <div class="form-label">
                            <strong>District<sup><code>*</code></sup></strong>
                            @*@Html.DropDownListFor(x => x.DistID, null, "Select District", new { @class = "form-control form-control-sm multiple-deps-ddl", @ref = "TehsilId,BlockId,VillageId,AgencyID,ProjectID", @refflg = "002,008,003,004,005" })*@

                            @Html.DropDownListFor(x => x.DistID, null, "Select District", new { @class = "form-control form-control-sm multiple-deps-ddl", @id = "DistID", @onchange = "binddata()" })


                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-label">
                            <strong>Tehsil<sup><code>*</code></sup></strong>
                            @*@Html.DropDownListFor(x => x.TehsilId, null, "Select Tehsil", new { @class = "form-control form-control-sm  multiple-deps-ddl", @ref = "VillageId", @refflg = "003" })*@

                            @*@Html.DropDownListFor(x => x.TehsilId, null, "Select Tehsil", new { @class = "form-control form-control-sm  multiple-deps-ddl", @id = "TehsilId" })*@
                            @*@Html.DropDownListFor(x => x.TehsilId, "Select Tehsil", new { @class = "form-control form-control-sm  multiple-deps-ddl", @id = "TehsilId" })*@


                            @Html.DropDownList("TehsilId", new List<SelectListItem> {
                                  new SelectListItem{ Text="--Select--", Value= "0"},

                                  }, new { @id = "TehsilId", @class = "form-control form-control-sm", @onchange = "bindvillage()" })

                            <input type="hidden" id="hdntesil" />
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-label">
                            <strong>Block<sup><code>*</code></sup></strong>
                            @*@Html.DropDownListFor(x => x.BlockId, null, "Select Block", new { @class = "form-control form-control-sm " })*@

                            @*@Html.DropDownListFor(x => x.BlockId, null, "Select Block", new { @class = "form-control form-control-sm ", @id = "BlockId" })*@


                            @Html.DropDownList("BlockId", new List<SelectListItem> {
                                  new SelectListItem{ Text="--Select--", Value= "0"},

                                  }, new { @id = "BlockId", @class = "form-control form-control-sm" })

                            <input type="hidden" id="hdnblockid" />


                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-label">
                            <strong>Village<sup><code>*</code></sup></strong>
                            @if (Model.VillageId == null)
                            {
                                @*@Html.DropDownListFor(x => x.VillageId, Enumerable.Empty<SelectListItem>(), "Select Village", new { @class = "form-control form-control-sm ", @id = "VillageId" })*@
                            }
                            else
                            {
                                @*@Html.DropDownListFor(x => x.VillageId, null, "Select Village", new { @class = "form-control form-control-sm ",@id= "VillageId" })*@
                            }

                            @Html.DropDownListFor(x => x.VillageId, Enumerable.Empty<SelectListItem>(), "Select Village", new { @class = "form-control form-control-sm ", @id = "VillageId" })

                            <input type="hidden" id="hdnvillage" />



                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-label">
                            <strong>Sector Type<sup><code>*</code></sup></strong>
                            @Html.DropDownListFor(x => x.SectorTypeId, null, "Select Type", new { @class = "form-control form-control-sm", @id = "SectorTypeId", @onchange = "BindSectorType()" })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-label">
                            <strong>Sector Name<sup><code>*</code></sup></strong>
                            @if (Model.VillageId == null)
                            {
                                @Html.DropDownListFor(x => x.SectorID, Enumerable.Empty<SelectListItem>(), "Select Sector", new { @class = "form-control form-control-sm", @id = "SectorID" })
                            }
                            else
                            {
                                @Html.DropDownListFor(x => x.SectorID, null, "Select Sector", new { @class = "form-control form-control-sm", @id = "SectorID" })

                            }

                            <input type="hidden" id="hdnsectorid" />


                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-label">
                            <strong>Work Name (Project)<sup><code>*</code></sup></strong>
                            @Html.TextAreaFor(x => x.ProjectName, new { @class = "form-control form-control-sm", @id = "ProjectName" })
                            @* @Html.DropDownListFor(x => x.ProjectID, null, "Select Project", new { @class = "form-control form-control-sm" })*@
                        </div>
                    </div>

                    <div class="col-md-3">
                        <div class="form-label">
                            <strong>Work Latitude<sup><code>*</code></sup></strong>
                            @Html.TextBoxFor(x => x.WorkLatitude, new { @class = "form-control form-control-sm", @autocomplete = "off", @id = "WorkLatitude" })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-label">
                            <strong>Work Longitude<sup><code>*</code></sup></strong>
                            @Html.TextBoxFor(x => x.WorkLongitude, new { @class = "form-control form-control-sm", @autocomplete = "off", @Id = "WorkLongitude" })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-label">
                            <strong>Purpose of Work<sup><code>*</code></sup></strong>
                            @Html.TextAreaFor(x => x.ProjectDescription, new { @class = "form-control form-control-sm", @autocomplete = "off", @id = "ProjectDescription" })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-label">
                            <strong>Prosposal No<sup><code>*</code></sup></strong>
                            @Html.TextBoxFor(x => x.ProsposalNo, "", new { @class = "form-control form-control-sm", @autocomplete = "off", @id = "ProsposalNo" })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-label">
                            <strong>Proposal Date<sup><code>*</code></sup></strong>
                            @Html.TextBoxFor(x => x.ProposalDate, ((Model.ProposalDate == null) ? "" : BusinessLogics.GetJSDateStr(Model.ProposalDate)), new { @class = "form-control form-control-sm ui-date", @autocomplete = "off", @Id = "ProposalDate" })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-label">
                            <strong>
                                Proposal Copy<sup><code>*</code></sup>
                                @if (!String.IsNullOrEmpty(Model.ProposalCopy))
                                {

                                    @*<input type="hidden" value="prev" id="ProposalCopy1"  />*@
                                }
                          
                                <a target="_blank" id="ProposalCopy1" style="display:none;">View Doc</a></strong>
                                @*@Html.TextBoxFor(x => x.ProposalCopy, "", new { @class = "form-control form-control-sm file-upload", @type = "file", @refid = "ProposalCopy", @id= "ProposalCopy" })*@

                                <input type="file" id="ProposalCopy" class="form-control" />


                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-label">
                            <strong>Proposed By<sup><code>*</code></sup></strong>
                            @Html.TextBoxFor(x => x.ProposedBy, "", new { @class = "form-control form-control-sm", @autocomplete = "off", @id = "ProposedBy" })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-label">
                            <strong>Estimated Project Cost<sup><code>*</code></sup></strong>
                            @Html.TextBoxFor(x => x.ProjectCost, "", new { @class = "form-control form-control-sm", @autocomplete = "off", @id = "ProjectCost" })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-label">
                            <strong>GST and Other Charges<sup><code>*</code></sup></strong>
                            @Html.TextBoxFor(x => x.GSTAndOthers, "", new { @class = "form-control form-control-sm", @autocomplete = "off", @id = "GSTAndOthers" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="row tab">
                <div class="row">
                    <div class="col-md-3">
                        <div class="form-label">
                            <strong>Tender No<sup><code>*</code></sup></strong>
                            @Html.TextBoxFor(x => x.TenderNo, "", new { @class = "form-control form-control-sm", @autocomplete = "off", @id = "TenderNo" })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-label">
                            <strong>Tender Date<sup><code>*</code></sup></strong>
                            @Html.TextBoxFor(x => x.TenderDate, ((Model.TenderDate == null) ? "" : BusinessLogics.GetJSDateStr(Model.TenderDate)), new { @class = "form-control form-control-sm ui-date", @autocomplete = "off", @id = "TenderDate" })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-label">
                            <strong>Work Order No</strong>
                            @Html.TextBoxFor(x => x.WorkOrderNo, "", new { @class = "form-control form-control-sm", @autocomplete = "off", @id = "WorkOrderNo" })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-label">
                            <strong>Work Order Date<sup><code>*</code></sup></strong>
                            @Html.TextBoxFor(x => x.WorkOrderDate, ((Model.WorkOrderDate == null) ? "" : BusinessLogics.GetJSDateStr(Model.WorkOrderDate)), new { @class = "form-control form-control-sm ui-date", @autocomplete = "off", @id = "WorkOrderDate" })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-label">
                            <strong>
                                WorkOrder Copy<sup><code>*</code></sup>
                                @if (!String.IsNullOrEmpty(Model.WorkOrderCopy))
                                {
                                    <a href="@Model.WorkOrderCopy" target="_blank">View Doc</a>
                                    @*<input type="hidden" value="prev" id="WorkOrderCopy" name="WorkOrderCopy" />*@
                                }
                            </strong>
                            @*@Html.TextBoxFor(x => x.WorkOrderCopy, "", new { @class = "form-control form-control-sm file-upload", @type = "file", @refid = "WorkOrderCopy", @id= "WorkOrderCopy" })*@
                            <strong>
                            <a  target="_blank" id="WorkOrderCopy1" style="display:none;">View Doc</a></strong>



                            <input type="file" id="WorkOrderCopy" class="form-control" />


                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-label">
                            <strong>Agency<sup><code>*</code></sup></strong>
                            @*@Html.DropDownListFor(x => x.AgencyID, null, "Select Agency", new { @class = "form-control form-control-sm", @id = "AgencyID" })*@

                            @Html.DropDownListFor(x => x.AgencyID, Enumerable.Empty<SelectListItem>(), "Select Agency", new { @class = "form-control form-control-sm", @id = "AgencyID" })

                            <input type="hidden" id="hdnagencey" />
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-label">
                            <strong>Sanctioned Project Cost<sup><code>*</code></sup></strong>
                            @Html.TextBoxFor(x => x.SanctionedProjectCost, "", new { @class = "form-control form-control-sm", @autocomplete = "off", @id = "SanctionedProjectCost" })




                        </div>
                    </div>
                </div>
            </div>
            <div style="overflow:auto;">
                <div style="float:right;">
                    <button type="button" id="prevBtn" onclick="nextPrev(-1)">Previous</button>
                    <button type="button" id="nextBtn" onclick="nextPrev(1)">Next</button>
                    @*<input type="submit" id="btnSubmit" value="@(String.IsNullOrEmpty(Model.ProjectPreparationID)?"Submit":"Update")" class="btn btn-success" style="display:none" />*@
                    <input type="button" id="btnSubmit" class="btn btn-success" value="Summit" onclick="Savedata();" style="display:none" />

                    <input type="button" id="btnUpdate" class="btn btn-success" value="Update" onclick="Savedata();" style="display:none" />

                </div>
            </div>
            <div style="text-align:center;margin-top:40px;">
                <span class="step"></span>
                <span class="step"></span>
                @*<span class="step"></span>
                    <span class="step"></span>*@
            </div>
        }
    </div>
</div>

@section Scripts {
    <script type="text/javascript">

    $(document).ready(function () {
       
        var id = '@ViewBag.id'

        if (id) {

            editdata(id)

        }

        //if ($("#hdntesil").val() == null || $("#hdntesil").val() == "") {
        //    //BindCityData();
        //}
        //else {
        //    binddata();
        //    $('#TehsilId').val($("#hdntesil").val())
        //    //alert($("#<%=labelcity.ClientID %>").text());
        //    $("#hdntesil").val();
        //}
     


        //if ($("#hdnvillage").val() == null || $("#hdnvillage").val() == "") {
        //    //BindCityData();
        //    bindvillage();
        //}
        //else {
        //    //alert('Not')
        //    bindvillage();
          
        //    $('#VillageId').val($("#hdnvillage").val())
        //    //alert($("#<%=labelcity.ClientID %>").text());
        //    $("#hdnvillage").val();
        //}
        $("#TehsilId").change(function () {

            $("#hdntesil").val("");
            $("#hdnvillage").val("");

        })



    })



        function editdata(id) {
            

            var dataobject = {
              
                ProjectPreparationID:id
            };

            $.ajax({
                url: "/ProjectWorkApproval/EditData",
                type: "POST",
                contentType: false,
                processData: false,
                data: JSON.stringify(dataobject),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (r) {

                    //alert(r.TehsilId)
                    $('#DistID').val(r.DistID)
                    $("#AgencyID").val(r.AgencyID);
                    $("#hdnagencey").val(r.AgencyID)
                    binddata();
                   

                    $("#TehsilId").val(r.TehsilId)

                   

                    $("#hdnvillage").val(r.VillageId)
                    //bindvillage(r.TehsilId);
                    
                    $("#BlockId").val(r.BlockId);
                    $("#VillageId").val(r.VillageId);
                  
                    $("#hdntesil").val(r.TehsilId)
                    $("#hdnvillage").val(r.VillageId);
                    //$("#TehsilId").onchange();
                    
                    bindvillage();


                    $("#ProjectNo").val(r.ProjectNo)
                    $("#SectorTypeId").val(r.SectorTypeId)
                    $("#hdnsectorid").val(r.SectorID);
                    $("#SectorID").val(r.SectorID)
                    BindSectorType();

                    $("#ProjectName").val(r.ProjectName)
                    $("#WorkLatitude").val(r.WorkLatitude)
                    $("#WorkLongitude").val(r.WorkLongitude)
                    $("#ProsposalNo").val(r.ProsposalNo)
                    $("#ProjectDescription").val(r.ProjectDescription);
                    $("#ProposedBy").val(r.ProposedBy)
                    $("#ProjectCost").val(r.ProjectCost)
                 
                    $("#GSTAndOthers").val(r.GSTAndOthers);
                    var ProposalDate = new Date(parseInt(r.ProposalDate.substr(6)));
                    var TenderDate = new Date(parseInt(r.TenderDate.substr(6)));
                    var WorkOrderDate = new Date(parseInt(r.WorkOrderDate.substr(6)));

                    $("#ProposalDate").val(ProposalDate.toLocaleDateString("es-CL"));
                    if (r.ProposalCopy != "") {
                        $("#ProposalCopy1").show();
                        $("#ProposalCopy1").attr({"href": r.ProposalCopy, "target": "_blank" });;
                    }

                    $("#TenderNo").val(r.TenderNo)

                    $("#TenderDate").val(TenderDate.toLocaleDateString("es-CL"))

                    $("#WorkOrderNo").val(r.WorkOrderNo)
                    $("#WorkOrderDate").val(WorkOrderDate.toLocaleDateString("es-CL"))
                    $("#SanctionedProjectCost").val(r.SanctionedProjectCost)

                    if (r.WorkOrderCopy != null) {
                        $("#WorkOrderCopy1").show();
                        $("#WorkOrderCopy1").attr({ "href": r.WorkOrderCopy, "target": "_blank" });;


                    }

                    $("#ProjectPreparationID").val(id)

                
                   

                }

            })




        }



        function BindSectorType() {
            var SectorTypeId = $("#SectorTypeId").val();
           
            debugger
            $.ajax({
                type: "Post",
                url: "/ProjectWorkApproval/BindSectorType?SectorTypeId=" + SectorTypeId,
                contentType: "application/json;charset=utf-8;",
                dataType: "json",
                //data: JSON.stringify({ SectorTypeId: SectorTypeId }),
                success: function (data) {
                    //alert(data.length);
                    $("#SectorID").empty();
                    $("#SectorID").append("<option value='0'>Select</option>");
                    for (var i = 0; i < data.length; i++) {
                        $("#SectorID").append($("<option></option>").val(data[i].SectorNameId).html(data[i].SectorName))
                    }
                    $("#SectorID").val($("#hdnsectorid").val());



                }
            })
        }

        function binddata() {
            var Districtid = $('#DistID').val();
            //alert("ok");
            $.ajax({
                type: "POST",
                url: "/ProjectWorkApproval/BindTeshil",
                data: "{'Districtid':'" + Districtid + "'}",
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    //alert(data.length);
                    $('#TehsilId').empty();
                    $.each(data, function (key, value) {

                        $('#TehsilId').append($("<option></option>").val(value.TehsilId).html(value.TehsilName));

                    });
                    $('#TehsilId').val($("#hdntesil").val());
                }
            })

            $.ajax({
                type: "POST",
                url: "/ProjectWorkApproval/BindBlock",
                data: "{'Districtid':'" + Districtid + "'}",
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    $('#BlockId').empty();
                    $.each(data, function (key, value) {
                        $('#BlockId').append($("<option></option>").val(value.BlockId).html(value.BlockName));
                    });
                    /* $('#Block').val($("#hdnblock").val())*/
                }
            })

          
            $.ajax({
                type: "POST",
                url: "/ProjectWorkApproval/BindAgencey",
                data: "{'Districtid':'" + Districtid + "'}",
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    //$('#AgencyID').empty();
                   /* $('#AgencyID').append("<option value='0'>select</option>");*/
                    $.each(data, function (key, value) {
                        $('#AgencyID').append($("<option></option>").val(value.AgencyID).html(value.AgencyName));
                    });
                    $('#AgencyID').val($("#hdnagencey").val());
                    

                    /* $('#Block').val($("#hdnblock").val())*/
                }
            })



        }








        function bindvillage() {
          

            var TehsilId = "";

            if ($("#hdntesil").val() != "") {
                
             
                TehsilId = $("#hdntesil").val();
            }
            else {
             
                
                TehsilId = $('#TehsilId').val();
            }
           
            //alert($("#hdnvillage").val());

            //alert(TehsilId);
          
            $.ajax({
                type: "POST",
                url: "/ProjectWorkApproval/BindVillage",
                data: "{'TehsilId':'" + TehsilId + "'}",
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    //alert(data.length);
                  
                    $.each(data, function (key, value) {

                        $('#VillageId').append($("<option></option>").val(value.VillageId).html(value.VillageNameInEnglish));

                    });
                    /*   $('#Tehsil').val($("#hdntesil").val())*/
                    $('#VillageId').val($("#hdnvillage").val())
                }
            })



        }



       





    </script>





    }

    <script>





    




    function Savedata() {


        if ($("#ProjectPreparationID").val() == "") {




            if ($("#ProjectNo").val() == "" || $("#ProjectNo").val() == null) {

                alert("Please Enter  ProjectNo ");
                return false;


            }

            if ($("#DistID").val() == "0" || $("#DistID").val() == null) {

                alert("Please Select District Name ");
                return false;


            }

            if ($("#TehsilId").val() == "0" || $("#TehsilId").val() == null) {

                alert("Please Select Teshil Name ");
                return false;


            }


            if ($("#BlockId").val() == "0" || $("#BlockId").val() == null) {

                alert("Please Select Block Name ");
                return false;


            }

            if ($("#VillageId").val() == "0" || $("#VillageId").val() == null) {

                alert("Please Select Village Name ");
                return false;


            }

            if ($("#SectorTypeId").val() == "0" || $("#SectorTypeId").val() == null) {

                alert("Please Select  Sector Type ");
                return false;


            }

            if ($("#SectorID").val() == "0" || $("#SectorID").val() == null) {

                alert("Please Select  Sector Name ");
                return false;


            }

            if ($("#ProjectName").val() == "0" || $("#ProjectName").val() == null) {

                alert("Please Select  ProjectName Name ");
                return false;


            }


            if ($("#WorkLatitude").val() == "0" || $("#WorkLatitude").val() == null) {

                alert("Please  Enter Work Latitude ");
                return false;


            }


            if ($("#WorkLongitude").val() == "0" || $("#WorkLongitude").val() == null) {

                alert("Please  Enter Work Longitude ");
                return false;


            }


            if ($("#ProjectDescription").val() == "" || $("#ProjectDescription").val() == null) {

                alert("Please  Enter Project Description ");
                return false;


            }


            if ($("#ProsposalNo").val() == "" || $("#ProsposalNo").val() == null) {

                alert("Please  Enter Prosposal No ");
                return false;


            }

            if ($("#ProposalDate").val() == "" || $("#ProposalDate").val() == null) {

                alert("Please  Enter Proposal Date ");
                return false;


            }


            if ($("#ProposedBy").val() == "" || $("#ProposedBy").val() == null) {

                alert("Please  Enter Proposal Date ");
                return false;


            }

            if ($("#ProjectCost").val() == "" || $("#ProjectCost").val() == null) {

                alert("Please  Enter Proposal Date ");
                return false;


            }

            if ($("#GSTAndOthers").val() == "" || $("#GSTAndOthers").val() == null) {

                alert("Please  Enter Proposal Date ");
                return false;


            }

            if ($("#TenderNo").val() == "" || $("#TenderNo").val() == null) {

                alert("Please  Enter Tender No ");
                return false;


            }


            if ($("#TenderDate").val() == "" || $("#TenderDate").val() == null) {

                alert("Please  Enter Tender Date ");
                return false;


            }

            if ($("#WorkOrderNo").val() == "" || $("#WorkOrderNo").val() == null) {

                alert("Please  Enter Tender Date ");
                return false;


            }

            if ($("#WorkOrderDate").val() == "" || $("#WorkOrderDate").val() == null) {

                alert("Please  Enter Tender Date ");
                return false;


            }

            if ($("#AgencyID").val() == "" || $("#AgencyID").val() == null) {

                alert("Please  Enter Tender Date ");
                return false;


            }

            var dataobject = {
                ProjectNo: $("#ProjectNo").val(),
                DistID: $("#DistID").val(),
                TehsilId: $("#TehsilId").val(),
                BlockId: $("#BlockId").val(),
                VillageId: $("#VillageId").val(),
                SectorTypeId: $("#SectorTypeId").val(),
                SectorID: $("#SectorID").val(),
                ProjectName: $("#ProjectName").val(),
                WorkLatitude: $("#WorkLatitude").val(),
                WorkLongitude: $("#WorkLongitude").val(),
                ProjectDescription: $("#ProjectDescription").val(),
                ProsposalNo: $("#ProsposalNo").val(),
                ProposalDate: $("#ProposalDate").val(),
                ProposedBy: $("#ProposedBy").val(),
                ProjectCost: $("#ProjectCost").val(),
                GSTAndOthers: $("#GSTAndOthers").val(),
                TenderNo: $("#TenderNo").val(),
                TenderDate: $("#TenderDate").val(),
                WorkOrderNo: $("#WorkOrderNo").val(),
                WorkOrderDate: $("#WorkOrderDate").val(),
                AgencyID: $("#AgencyID").val(),
                SanctionedProjectCost: $("#SanctionedProjectCost").val(),
            }


            $.ajax({
                url: "/ProjectWorkApproval/insertProjectworkproposal",
                type: "POST",
                contentType: false,
                processData: false,
                data: JSON.stringify(dataobject),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (r) {

                    uploadImage($("#ProjectNo").val());
                    if (r.Message == "1") {
                        uploadImage($("#ProjectNo").val());
                        uploadworkorder($("#ProjectNo").val())
                       
                        toastr.success("Record saved successfully", "Success", { onHidden: function () { window.location.href = "/ProjectWorkApproval/ProjectProposalPrepration" } });
                       
                        //CrearFields();
                        //location.reload();
                    } 
                    else {
                        toastr.success("Some Error Occured", "Error", { onHidden: function () { window.location.href = "/ProjectWorkApproval/CreateProjectProposalPrepration" } });

                       
                        //$("#showSpinner").hide();
                    }
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    alert("Server is not responding!");
                    // $("#showSpinner").hide();
                }
            })

        }

        else {


            if ($("#ProjectNo").val() == "" || $("#ProjectNo").val() == null) {

                alert("Please Enter  ProjectNo ");
                return false;


            }

            if ($("#DistID").val() == "0" || $("#DistID").val() == null) {

                alert("Please Select District Name ");
                return false;


            }

            if ($("#TehsilId").val() == "0" || $("#TehsilId").val() == null) {

                alert("Please Select Teshil Name ");
                return false;


            }


            if ($("#BlockId").val() == "0" || $("#BlockId").val() == null) {

                alert("Please Select Block Name ");
                return false;


            }

            if ($("#VillageId").val() == "0" || $("#VillageId").val() == null) {

                alert("Please Select Village Name ");
                return false;


            }

            if ($("#SectorTypeId").val() == "0" || $("#SectorTypeId").val() == null) {

                alert("Please Select  Sector Type ");
                return false;


            }

            if ($("#SectorID").val() == "0" || $("#SectorID").val() == null) {

                alert("Please Select  Sector Name ");
                return false;


            }

            if ($("#ProjectName").val() == "0" || $("#ProjectName").val() == null) {

                alert("Please Select  ProjectName Name ");
                return false;


            }


            if ($("#WorkLatitude").val() == "0" || $("#WorkLatitude").val() == null) {

                alert("Please  Enter Work Latitude ");
                return false;


            }


            if ($("#WorkLongitude").val() == "0" || $("#WorkLongitude").val() == null) {

                alert("Please  Enter Work Longitude ");
                return false;


            }


            if ($("#ProjectDescription").val() == "" || $("#ProjectDescription").val() == null) {

                alert("Please  Enter Project Description ");
                return false;


            }


            if ($("#ProsposalNo").val() == "" || $("#ProsposalNo").val() == null) {

                alert("Please  Enter Prosposal No ");
                return false;


            }

            if ($("#ProposalDate").val() == "" || $("#ProposalDate").val() == null) {

                alert("Please  Enter Proposal Date ");
                return false;


            }


            if ($("#ProposedBy").val() == "" || $("#ProposedBy").val() == null) {

                alert("Please  Enter Proposal Date ");
                return false;


            }

            if ($("#ProjectCost").val() == "" || $("#ProjectCost").val() == null) {

                alert("Please  Enter Proposal Date ");
                return false;


            }

            if ($("#GSTAndOthers").val() == "" || $("#GSTAndOthers").val() == null) {

                alert("Please  Enter Proposal Date ");
                return false;


            }

            if ($("#TenderNo").val() == "" || $("#TenderNo").val() == null) {

                alert("Please  Enter Tender No ");
                return false;


            }


            if ($("#TenderDate").val() == "" || $("#TenderDate").val() == null) {

                alert("Please  Enter Tender Date ");
                return false;


            }

            if ($("#WorkOrderNo").val() == "" || $("#WorkOrderNo").val() == null) {

                alert("Please  Enter Tender Date ");
                return false;


            }

            if ($("#WorkOrderDate").val() == "" || $("#WorkOrderDate").val() == null) {

                alert("Please  Enter Tender Date ");
                return false;


            }

            if ($("#AgencyID").val() == "" || $("#AgencyID").val() == null) {

                alert("Please  Enter Tender Date ");
                return false;


            }

            var dataobject = {
                ProjectNo: $("#ProjectNo").val(),
                DistID: $("#DistID").val(),
                TehsilId: $("#TehsilId").val(),
                BlockId: $("#BlockId").val(),
                VillageId: $("#VillageId").val(),
                SectorTypeId: $("#SectorTypeId").val(),
                SectorID: $("#SectorID").val(),
                ProjectName: $("#ProjectName").val(),
                WorkLatitude: $("#WorkLatitude").val(),
                WorkLongitude: $("#WorkLongitude").val(),
                ProjectDescription: $("#ProjectDescription").val(),
                ProsposalNo: $("#ProsposalNo").val(),
                ProposalDate: $("#ProposalDate").val(),
                ProposedBy: $("#ProposedBy").val(),
                ProjectCost: $("#ProjectCost").val(),
                GSTAndOthers: $("#GSTAndOthers").val(),
                TenderNo: $("#TenderNo").val(),
                TenderDate: $("#TenderDate").val(),
                WorkOrderNo: $("#WorkOrderNo").val(),
                WorkOrderDate: $("#WorkOrderDate").val(),
                AgencyID: $("#AgencyID").val(),
                SanctionedProjectCost: $("#SanctionedProjectCost").val(),
                ProjectPreparationID:$("#ProjectPreparationID").val()
            }


            $.ajax({
                url: "/ProjectWorkApproval/Updateworkprposla",
                type: "POST",
                contentType: false,
                processData: false,
                data: JSON.stringify(dataobject),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (r) {

                    uploadImage($("#ProjectNo").val());
                    if (r.Message == "1") {
                        uploadImage($("#ProjectNo").val());
                        uploadworkorder($("#ProjectNo").val())
                        toastr.success("Record Updated successfully", "Success", { onHidden: function () { window.location.href = "/ProjectWorkApproval/ProjectProposalPrepration" } });
                        //CrearFields();
                        //location.reload();
                    }
                    else {
                        toastr.error("Some Error Occured", "Error", { onHidden: function () { window.location.href = "/ProjectWorkApproval/CreateProjectProposalPrepration" } });
                        //$("#showSpinner").hide();
                    }
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    toastr.error("Some Error Occured", "Error", { onHidden: function () { window.location.href = "/ProjectWorkApproval/CreateProjectProposalPrepration" } });
                    // $("#showSpinner").hide();
                }
            })


        }

    }

    function uploadImage(ProjectNo) {



        debugger;
        var data1 = $("#ProposalCopy").val();


        var fileUpload = $("#ProposalCopy").get(0);

        var files = fileUpload.files;

        var fileData = new FormData();
        for (var i = 0; i < files.length; i++) {
            fileData.append(files[i].name, files[i]);

        }

        fileData.append('ProjectNo', ProjectNo);

        $.ajax({
            url: '/ProjectWorkApproval/UploadProposalcopy',
            type: "POST",
            contentType: false, // Not to set any content header
            processData: false, // Not to process data
            data: fileData,
            success: function (result) {
            },
            error: function (err) {
            }
        });
    }



    function uploadworkorder(ProjectNo) {
        debugger;
        var fileUpload = $("#WorkOrderCopy").get(0);
        var files = fileUpload.files;
        var fileData = new FormData();
        for (var i = 0; i < files.length; i++) {
            fileData.append(files[i].name, files[i]);
        }

        fileData.append('ProjectNo', ProjectNo);

        $.ajax({
            url: '/ProjectWorkApproval/Uploadworkordercopy',
            type: "POST",
            contentType: false, // Not to set any content header
            processData: false, // Not to process data
            data: fileData,
            success: function (result) {
            },
            error: function (err) {
            }
        });
    }









    </script>
    <script>
        var currentTab = 0;
        showTab(currentTab);

        function showTab(n) {
            var x = document.getElementsByClassName("tab");
            x[n].style.display = "block";

            if (n == 0) {
                document.getElementById("prevBtn").style.display = "none";
                document.getElementById("btnSubmit").style.display = "none";
            }
            else {
                document.getElementById("prevBtn").style.display = "inline";
                document.getElementById("btnSubmit").style.display = "none";
            }
            if (n == (x.length - 1)) {
                document.getElementById("nextBtn").innerHTML = "Submit";
                document.getElementById("nextBtn").style.display = "none";
                document.getElementById("btnSubmit").style.display = "inline";

            } else {
                document.getElementById("nextBtn").innerHTML = "Next";
                document.getElementById("nextBtn").style.display = "inline";
            }
            fixStepIndicator(n)
        }

        function nextPrev(n) {

            if (n == 1 && !validateForm())
                return false;

            var x = document.getElementsByClassName("tab");
            x[currentTab].style.display = "none";
            currentTab = currentTab + n;
            if (currentTab >= x.length) {
                document.getElementById("nextBtn").style.display = "none";
                document.getElementById("btnSubmit").style.display = "inline";
                return false;
            }
            showTab(currentTab);
        }

        function validateForm() {
            var x, y, i, valid = true;
            x = document.getElementsByClassName("tab");
            // Get the current tab
            var currentTabElement = x[currentTab];

            // Get the elements within the current tab
            y = currentTabElement.getElementsByTagName("select");
            var emptyFields = [];
            // Check select elements
            if (y.length > 0) {
                for (i = 0; i < y.length; i++) {
                    if (y[i].value == "") {
                        y[i].className += " invalid";
                        emptyFields.push(y[i].parentNode.querySelector('strong').textContent.trim().replace("*", ", "));
                        valid = false;
                    }
                }
            } else {
                // If no select elements found, check input elements
                /*y = currentTabElement.getElementsByTagName("input");*/
                // If no select elements found, check input elements except file inputs
                y = currentTabElement.querySelectorAll("input:not([type='file'])");
                for (i = 0; i < y.length; i++) {
                    if (y[i].value == "") {
                        y[i].className += " invalid";
                        emptyFields.push(y[i].parentNode.querySelector('strong').textContent.trim().replace("*", ", "));
                        valid = false;
                    }
                }
            }

            if (!valid) {

                toastr.error("Please fill in the following fields:\n" + emptyFields.join("\n"));
            } else {
                document.getElementsByClassName("step")[currentTab].className += " finish";
            }
            return valid;
        }
        function fixStepIndicator(n) {
            var i, x = document.getElementsByClassName("step");
            for (i = 0; i < x.length; i++) {
                x[i].className = x[i].className.replace(" active", "");
            }
            x[n].className += " active";
        }
    </script>

